<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper	namespace="com.picmap.app.travel.TravelDAO">

	<sql id="searchSql">
	
		<where>
			(T.BOARDTITLE LIKE '%'||#{search}||'%'
			OR T.BOARDCONTENT LIKE '%'||#{search}||'%'
			OR P.ADDRESS LIKE '%'||#{search}||'%')
			AND PARENTBOARD IS NULL
		</where>
		
	</sql>
	
	<select id="getTotalCount" resultType="java.lang.Long">
		SELECT	COUNT(BOARDNUM)
		FROM	TRAVEL
		WHERE	PARENTBOARD IS NULL
	</select>
	
	<select id="getPostCount" resultType="java.lang.Long" parameterType="Scroller">
		SELECT	COUNT(ROWNUM)
		FROM	TRAVEL T
				JOIN 
				PING P
				ON T.PINGNUM = P.PINGNUM
		WHERE	T.BOARDTITLE LIKE '%'||#{search}||'%'
				OR T.BOARDCONTENT LIKE '%'||#{search}||'%'
				OR P.ADDRESS LIKE '%'||#{search}||'%'
	</select>
	
	<select id="bestList" resultType="TravelDTO">
		<![CDATA[
		SELECT *
		FROM (
		    SELECT T.*, H.HEARTCOUNT, M.MEMBERNICKNAME
		    FROM TRAVEL T
		    JOIN (
		        SELECT BOARDNUM, COUNT(HEARTNUM) AS HEARTCOUNT
		        FROM HEART
		        GROUP BY BOARDNUM
		    ) H ON T.BOARDNUM = H.BOARDNUM
		    	LEFT JOIN
		    	MEMBER M
		    	ON T.MEMBERNUM = M.MEMBERNUM
		    WHERE PARENTBOARD IS NULL
		    ORDER BY H.HEARTCOUNT DESC, T.HIT DESC
		)
		WHERE ROWNUM <= 6
		]]>
	</select>
	
	<select id="getList" resultType="TravelDTO" parameterType="Scroller">
		SELECT 	*
		FROM 	(
			SELECT  ROWNUM R, TM.*
			FROM 	(
				SELECT T.*, M.MEMBERID, M.MEMBERNICKNAME
				FROM TRAVEL T
					 LEFT JOIN
					 MEMBER M
					 ON T.MEMBERNUM = M.MEMBERNUM
					 LEFT JOIN
					 PING P
					 ON T.PINGNUM = P.PINGNUM
				<include refid="searchSql"></include>
				ORDER BY BOARDNUM DESC
			)TM
		)
		WHERE R BETWEEN #{startRow} AND #{endRow}	
	</select>
	
	<select id="getListSortByLikes" resultType="TravelDTO" parameterType="Scroller">
		SELECT *
		FROM (
		    SELECT A.*, ROWNUM R
		    FROM (
		        SELECT T.*, NVL(H.HEARTCOUNT, 0) AS HEARTCOUNT, M.MEMBERNICKNAME
		        FROM TRAVEL T
		        LEFT JOIN (
		            SELECT BOARDNUM, COUNT(HEARTNUM) AS HEARTCOUNT
		            FROM HEART
		            GROUP BY BOARDNUM
		        ) H ON T.BOARDNUM = H.BOARDNUM
		        LEFT JOIN
		        MEMBER M
		        ON T.MEMBERNUM = M.MEMBERNUM
		        LEFT JOIN
		        PING P
		        ON T.PINGNUM = P.PINGNUM
		        <include refid="searchSql"></include>
		        ORDER BY NVL(H.HEARTCOUNT, 0) DESC, T.HIT DESC
		    ) A
		) 
		WHERE R BETWEEN #{startRow} AND #{endRow}
	</select>	
	
	
	<insert id="add" parameterType="TravelDTO">
  		INSERT INTO TRAVEL
  		VALUES
  		(#{boardNum}, #{memberNum}, #{boardTitle}, #{boardContent}, SYSDATE, SYSDATE, 0,
  		#{fileName, jdbcType=VARCHAR}, #{rootBoard}, #{parentBoard, jdbcType=BIGINT}, #{childBoard, jdbcType=BIGINT}, #{pingNum, jdbcType=BIGINT})
	</insert>
	
	
	<select id="makeBoardNum" resultType="java.lang.Long">
		SELECT BOARDNUM_SEQ.NEXTVAL FROM DUAL
	</select>
	
	
	<update id="addPlus" parameterType="TravelDTO">
		UPDATE TRAVEL
		SET
		CHILDBOARD=#{boardNum}
		WHERE BOARDNUM=#{parentBoard}
	</update>

	
	<select id="detail" parameterType="TravelDTO" resultType="TravelDTO">
		SELECT T.*, TO_CHAR(CREATEDATE, 'YYYY"년" MM"월" DD"일"') AS writeDate
		FROM TRAVEL T
		WHERE BOARDNUM=#{boardNum}
	</select>


	<update id="hit" parameterType="TravelDTO">
		UPDATE TRAVEL
		SET HIT = HIT + 1
		WHERE BOARDNUM = #{boardNum}
	</update>
	
	
	<update id="update" parameterType="TravelDTO">
		UPDATE TRAVEL
		SET BOARDTITLE = #{boardTitle},
			BOARDCONTENT = #{boardContent},
			UPDATEDATE = SYSDATE,
			FILENAME = #{fileName, jdbcType=VARCHAR}
		WHERE BOARDNUM = #{boardNum}
	</update>


	<delete id="delete" parameterType="TravelDTO">
		DELETE TRAVEL
		WHERE BOARDNUM = #{boardNum}
	</delete>
	<update id="adoption1" parameterType="TravelDTO">
		UPDATE TRAVEL
		SET CHILDBOARD=#{childBoard}
		WHERE BOARDNUM=#{parentBoard}
	</update>
	<update id="adoption2" parameterType="TravelDTO">
		UPDATE TRAVEL
		SET PARENTBOARD=#{parentBoard}
		WHERE BOARDNUM=#{childBoard}
	</update>
	<update id="adoption3" parameterType="TravelDTO">
		UPDATE TRAVEL
		SET CHILDBOARD=NULL
		WHERE BOARDNUM=#{parentBoard}
	</update>
	<delete id="deletePing" parameterType="TravelDTO">
		DELETE PING
		WHERE PINGNUM = #{pingNum}
	</delete>
	<select id="getCommentNum" resultType="CommentsDTO" parameterType="TravelDTO">
    	SELECT COMMENTNUM
    	FROM COMMENTS
    	WHERE BOARDNUM = ${boardNum}
	</select>
	

	<delete id="deleteHeart" parameterType="TravelDTO">
		DELETE HEART
		WHERE BOARDNUM = #{boardNum}
	</delete>
	<delete id="deleteSavePost" parameterType="TravelDTO">
		DELETE SAVEPOST
		WHERE BOARDNUM = #{boardNum}
	</delete>
	
	
	<select id="getCommentNums" resultType="CommentsDTO" parameterType="java.util.List">
    	SELECT COMMENTNUM
    	FROM COMMENTS
    	WHERE BOARDNUM IN
    	<foreach collection="list" item="item" open="(" separator="," close=")">
	        #{item.boardNum}
	    </foreach>
	</select>
	<delete id="deleteHeartComments" parameterType="java.util.List">
		DELETE HEARTCOMMENTS
		WHERE COMMENTNUM IN
		<foreach collection="list" item="item" open="(" separator="," close=")">
	        #{item.commentNum}
	    </foreach>
	</delete>
	<delete id="deleteReply" parameterType="java.util.List">
		DELETE REPLY
		WHERE COMMENTNUM IN
		<foreach collection="list" item="item" open="(" separator="," close=")">
	        #{item.commentNum}
	    </foreach>
	</delete>
	<delete id="deleteComments" parameterType="java.util.List">
		DELETE COMMENTS
		WHERE COMMENTNUM IN
		<foreach collection="list" item="item" open="(" separator="," close=")">
	        #{item.commentNum}
	    </foreach>
	</delete>
	

	
	<delete id="deleteAll" parameterType="TravelDTO">
		DELETE TRAVEL
		WHERE ROOTBOARD = #{rootBoard}
	</delete>	
	<select id="getChildInfo" resultType="TravelDTO" parameterType="TravelDTO">
    	SELECT PINGNUM, BOARDNUM
    	FROM TRAVEL
    	WHERE ROOTBOARD = #{rootBoard}
	</select>
	<delete id="deleteAllPing" parameterType="java.util.List">
		DELETE PING
	    WHERE PINGNUM IN
	    <foreach collection="list" item="item" open="(" separator="," close=")">
	        #{item.pingNum}
	    </foreach>
	</delete>	
	




</mapper>

